# DivineEngine Quantumult 配置示例
#
# 以 ";" 或 "#" 或 "//" 开头的行为注释行。
#
# 最新完整的示例需查看 Quantumult X 里「配置文件」中的「示例」
#

[general]
# 建议在「其他设置」里「GeoLite2」的「来源」填写使用「 https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb 」并开启「自动更新」

;profile_img_url=http://www.example.com/example.png

# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js
# > 功能强大的解析器，用于引用资源的转换
# 国内源
;resource_parser_url=https://cdn.jsdelivr.net/gh/KOP-XIAO/QuantumultX@master/Scripts/resource-parser.js
# GitHub源
resource_parser_url= https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js

# geo_location_checker用于获取及展示节点信息，可完整自定义展示内容与方式
;geo_location_checker=http://www.example.com/json/, https://www.example.com/script.js
geo_location_checker=http://ip-api.com/json/?lang=zh-TW, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js

# Quantumult 使用 HEAD 方法将 HTTP 请求发送到服务器检查 url 来测试代理的状态，结果应该是两个延迟，第一个是 TCP 与代理服务器的握手，第二个是 Quantumult 成功地从服务器检查 url 接收 HTTP 响应的总时间。闪电图标表示 TCP Fast Open 成功。如果 [server_local] 或 [server_remote] 中的服务器有自己的 server_check_url，则会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试(测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间)，来确认节点的可用性。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。
server_check_url=http://cp.cloudflare.com/generate_204

# DNS 排除列表
# dns_exclusion_list 包含了禁用占位符 IP (240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了 resolve-on-remote 设置。
# 列表的域名不使用 fake-ip 方式，其它域名则全部采用 fake-ip 及远程解析的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, *.cib.com.cn, id6.me

# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
;excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
# Hearthstone: 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32
excluded_routes=239.255.255.250/32

# 在网络环境切换时出发运行模式变更
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例意思：[蜂窝数据],[Wi-Fi],[SSID]
# 下列示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理，，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连
# Rewrite 及 Task 模块始终生效
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct

# 在特定 SSID 网络时(除了 Task 模块)暂停 Quantumult X
;ssid_suspended_list=LINK_22E174, LINK_22E175

# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。
;udp_whitelist=53, 123, 1900, 80-443
;udp_whitelist=1-442, 444-65535

# 说明：参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。默认为 reject。
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（如：VMess、trojan），或支持 UDP 转发但未注明 udp-relay=true 的（例如：SS/SSR 且与服务器是否真实开启 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。
# 如果没有节点支持 UDP 转发，可取消下条注释（去除 ;）
;fallback_udp_policy=direct
fallback_udp_policy=reject

;icmp_auto_reply=true

[dns]
# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。
# 如果您想让某个域名(例如：example.com)为 127.0.0.0.1，只需在「filter_local」部分添加「host, example.com, reject」即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 禁用系统 DNS
# 为了提高性能，会使用从当前网络(系统)中获取的 DNS 服务器(您可以使用「no-system」禁用此功能，但至少要增加一个自定义的 DNS 服务器。
no-system

# 禁用 IPv6
# 当设置「no-ipv6」时，Quanumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败。
no-ipv6

# 自定义 DNS
# > OneDNS
;server=117.50.10.10
# > DNSPod Public DNS
;server=119.29.29.29
# > Alibaba Public DNS
;server=223.5.5.5
# > AdGuard DNS
server=94.140.14.14
server=94.140.15.15
# > Google DNS
server=8.8.8.8
# > CloudFlare DNS
server=1.1.1.1

# 在特定的网络环境下忽略自定义 DNS 可在后方加上「excluded_ssids」相关字段。
# 注意：如配置了 no-system，则请务必确保在忽略了部分自定义 DNS 的配置下至少有一个可用的自定义 DNS 配置。
# server=114.114.114.114, excluded_ssids=SSID1, SSID2

# DNS over HTTPS
# 当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。
# 当设置了多个 DoH 服务器时，只有第一个会被使用。
# 当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用，并使用常规服务器，直到下次启动 VPN 连接。
# 不建议在与防火墙相关的网络环境中使用，不确定 DoH 服务器是否总能被到达。
# 如果 DoH 服务器在您的国家或地区不是流行的 DNS 服务器，则不推荐使用，它可能会丢失 ISP DNS 服务器返回的 CDN 优化结果。
# 如果 DoH 服务器是一个反广告相关的服务器，则不推荐使用（Quantumult X 过滤模块对于被拒绝的域具有更好的性能，它可以避免客户端无休止的请求）。
;doh-server=https://dns.alidns.com/dns-query
;doh-server=https://223.6.6.6/dns-query

# > Google DoH
doh-server=https://1.1.1.1/dns-query, https://dns.cloudflare.com/dns-query, https://dns.quad9.net/dns-query, https://dns.google/dns-query, https://dns.adguard.com/dns-query

# 本地 DNS 映射

# > Firebase Cloud Messaging
;address=/mtalk.google.com/108.177.125.188

# > Google Dl
;server=/dl.google.com/119.29.29.29
;server=/dl.l.google.com/119.29.29.29
;server=/update.googleapis.com/119.29.29.29

# > PlayStation
;server=/*.dl.playstation.net/119.29.29.29

# > InBound
;server=/*.taobao.com/223.5.5.5
;server=/*.tmall.com/223.5.5.5
;server=/*.alipay.com/223.5.5.5
;server=/*.alicdn.com/223.5.5.5
;server=/*.aliyun.com/223.5.5.5
;server=/*.jd.com/119.28.28.28
;server=/*.qq.com/119.28.28.28
;server=/*.tencent.com/119.28.28.28
;server=/*.weixin.com/119.28.28.28

# > Router Admin Panel
;server=/amplifi.lan/system
;server=/router.synology.com/system
;server=/sila.razer.com/system
;server=/router.asus.com/system
;server=/routerlogin.net/system
;server=/orbilogin.com/system
;server=/www.LinksysSmartWiFi.com/system
;server=/LinksysSmartWiFi.com/system
;server=/myrouter.local/system
;server=/www.miwifi.com/system
;server=/miwifi.com/system
;server=/mediarouter.home/system
;server=/tplogin.cn/system
;server=/tplinklogin.net/system
;server=/melogin.cn/system
;server=/falogin.cn/system

#example
;server=8.8.4.4:53
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]

[policy]
#
# 需要策略图标的在策略后加上：img-url=http://example.com/icon.png
#

# 类型：静态(static)
# 指向您手动选择的候选服务器。
;static=policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 类型：可用(available)
# 指向候选服务器的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available=policy-name-2, Sample-A, Sample-B, Sample-C

# 类型：负载均衡(round-robin)
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C

# 类型：延迟测试(url-latency-benchmark)
# 策略指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# 当用户在 Quantumult X 中手动启动 URL 测试时，策略结果也会被更新。
# 该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
;url-latency-benchmark=policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, tolerance=0

# SSID
# 策略根据网络环境的不同指向服务器。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# resource-tag-regex 及 server-tag-regex 仅适用于 static、available 和 round-robin 类型的策略。
;static=policy-name-5, resource-tag-regex=^sample, server-tag-regex=^example, img-url=http://example.com/icon.png
;available=policy-name-6, resource-tag-regex=^sample, server-tag-regex=^example
;round-robin=policy-name-7, resource-tag-regex=^sample, server-tag-regex=^example

static=全球加速, direct, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Global.png
static=Apple, direct, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Apple.png
static=AI_Platforms, AI_Platforms节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png
static=GlobalSNS, 全球加速, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Telegram.png
static=TikTok, 国际媒体, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TikTok.png
static=Netflix, Netflix节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
static=YouTube, 国际媒体, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/YouTube.png
static=BiliBili（非大陆版）, direct, 港台番剧, 香港节点, 台湾节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Bili.png
static=巴哈姆特, 港台番剧, 香港节点, 台湾节点, proxy
static=国际媒体, 全球加速, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Streaming.png
static=港台番剧, direct, 香港节点, 台湾节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingSE.png
static=国内影视, direct, 香港节点, 台湾节点, proxy, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/StreamingCN.png
static=漏网之鱼, direct, 全球加速, 香港节点, 台湾节点, 日本节点, 狮城节点, 美国节点, 英国节点, 韩国节点, proxy, reject, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Final.png
url-latency-benchmark=香港节点, server-tag-regex=((IEPL|IPLC).*港.*)|(.*港.*专线.*)|(.*Hong.*Kong.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
url-latency-benchmark=台湾节点, server-tag-regex=((IEPL|IPLC).*台.*)|(.*台.*专线.*)|(.*Taiwan.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png
url-latency-benchmark=日本节点, server-tag-regex=((IEPL|IPLC).*日.*)|(.*日.*专线.*)|(.*Japan.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
url-latency-benchmark=狮城节点, server-tag-regex=((IEPL|IPLC).*新.*)|(.*新.*专线.*)|(.*Singapore.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
url-latency-benchmark=美国节点, server-tag-regex=((IEPL|IPLC).*美.*)|(.*美.*专线.*)|(.*US.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
url-latency-benchmark=英国节点, server-tag-regex=((IEPL|IPLC).*英.*)|(.*英.*专线.*)|(.*UK.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/UK.png
url-latency-benchmark=韩国节点, server-tag-regex=((IEPL|IPLC).*韩.*)|(.*韩.*专线.*)|(.*Korea.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/KR.png
static=Netflix节点, server-tag-regex=(.*Netflix.*)|(.*NF.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Netflix.png
static=AI_Platforms节点, server-tag-regex=(.*GPT.*)|(.*AI.*), check-interval=600, tolerance=0, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png
static=DNS查询节点, direct, 香港节点, proxy

[server_remote]
#
# 参数「tag」和「enabled」是可选的。
# 各种远程资源的默认同步时间间隔是 172800 秒。
# 你可以设置 update-interval=172800 来自定义你的自动同步时间间隔(秒)，负数表示禁用自动同步。
#

[filter_remote]
#
# 参数「tag」、「force-policy」和「enabled」是可选的。
# 当有强制策略时，远程资源的过滤器中的策略将被忽略，并使用强制策略。
#

# Block Http DNS
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BlockHttpDNS/BlockHttpDNS.list, tag=🛡️BlockHttpDNS, force-policy=reject, update-interval=172800, enabled=true
# Http DNS
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/DNS/DNS.list, tag=DNS, force-policy=DNS查询节点, update-interval=172800, opt-parser=false, enabled=true

# Advertising 广告 （毒奶/DivineEngine二选一）
# 毒奶去广告计划（与https://limbopro.com/Adblock4limbo.conf重写共用）
https://limbopro.com/Adblock4limbo.list, tag=🛡AdblockForLimbo, force-policy=reject, update-interval=172800, enabled=true
https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block.txt, tag=🛡野比(4W+), force-policy=reject, update-interval=172800, enabled=false
https://raw.githubusercontent.com/NobyDa/ND-AD/master/QuantumultX/AD_Block_Plus.txt, tag=🛡野比(6W+), force-policy=reject, update-interval=172800, enabled=true

# Privacy 隐私
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Privacy/Privacy.list, tag=🛡️Privacy, force-policy=reject, update-interval=172800, enabled=true

# Hijacking 运营商劫持或恶意网站
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Hijacking/Hijacking.list, tag=🛡️Hijacking, force-policy=reject, update-interval=172800, enabled=true

# stun 防泄露
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/STUN/STUN.list, tag=🛡️STUN, force-policy=reject, update-interval=172800, enabled=true

# 机场专线
https://raw.githubusercontent.com/limbopro/Profiles4limbo/main/airports.list, tag=✈️机场专线, force-policy=direct, update-interval=172800, enabled=true

# 中国移动
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMobile/ChinaMobile.list, tag=中国移动, force-policy=direct, update-interval=172800, enabled=true

# 内网、下载直连
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Lan/Lan.list, tag=LAN, force-policy=direct, update-interval=172800, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Download/Download.list, tag=Download, force-policy=direct, update-interval=172800, enabled=true

# GlobalStreaming App
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BiliBiliIntl/BiliBiliIntl.list, tag=🎞BiliBiliIntl（非大陆版）, force-policy=BiliBili（非大陆版）, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Bahamut/Bahamut.list, tag=🎞巴哈姆特, force-policy=巴哈姆特, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Netflix/Netflix.list, tag=🎞Netflix, force-policy=Netflix, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTube/YouTube.list, tag=🎞YouTube, force-policy=YouTube, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTubeMusic/YouTubeMusic.list, tag=🎞YouTubeMusic, force-policy=YouTube, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/TikTok/TikTok.list, tag=🎞TikTok, force-policy=TikTok, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Disney/Disney.list, tag=🎞Disney, force-policy=国际媒体, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Spotify/Spotify.list, tag=🎞Spotify, force-policy=国际媒体, update-interval=172800, opt-parser=false, enabled=true

# GlobalSNS App
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Clubhouse/Clubhouse.list, tag=📨ClubHouse, force-policy=GlobalSNS, update-interval=172800, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Discord/Discord.list, tag=📨Discord, force-policy=GlobalSNS, update-interval=172800, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Facebook/Facebook.list, tag=📨Facebook, force-policy=GlobalSNS, update-interval=172800, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list, tag=📨Telegram, force-policy=GlobalSNS, update-interval=172800, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Twitter/Twitter.list, tag=📨Twitter, force-policy=GlobalSNS, update-interval=172800, enabled=true

# AI Platforms
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/OpenAI/OpenAI.list, tag=🤖AI_Platforms, force-policy=AI_Platforms, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/BardAI/BardAI.list, tag=🤖AI_Platforms, force-policy=AI_Platforms, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Claude/Claude.list, tag=🤖AI_Platforms, force-policy=AI_Platforms, update-interval=172800, opt-parser=false, enabled=true
https://raw.githubusercontent.com/limbopro/Profiles4limbo/main/AI_Platforms_qx.list, tag=🤖AI_Platforms, force-policy=AI_Platforms, update-interval=172800, opt-parser=false, enabled=true

# StreamingSE 中国流媒体服务(面向海外版本)，一般为中国大陆的流媒体面向港澳台或海外的版本，不同于独立版本
# 部分流媒体（如哔哩哔哩（僅限港澳台地區）、愛奇藝海外站、芒果TV国际）如果直接代理会影响中国大陆版内容的播放
# 所以以策略组的形式，在需要观看面向港澳台或海外的版本时切换代理，日常可选直连。 
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMedia/ChinaMedia.list, tag=🎞ChinaMedia, force-policy=direct, update-interval=172800, opt-parser=false, enabled=true

# 区域流媒体
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/AsianMedia/AsianMedia.list, tag=🎞AsianMedia, force-policy=港台番剧, update-interval=172800, opt-parser=false, enabled=true

# Streaming 国际流媒体服务
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list, tag=🎞GlobalMedia, force-policy=国际媒体, update-interval=172800, enabled=true

# Global 全球加速
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, tag=🇺🇳Global, force-policy=全球加速, update-interval=172800, enabled=true

# Apple 服务
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag=🍎Apple, force-policy=Apple, update-interval=172800, enabled=true

# China 中国直连
https://raw.githubusercontent.com/sve1r/Rules-For-Quantumult-X/refs/heads/main/Rules/Region/ChinaASN.list, tag=ChinaASN, force-policy=direct, update-interval=172800, opt-parser=true, enabled=true
https://raw.githubusercontent.com/sve1r/Rules-For-Quantumult-X/refs/heads/main/Rules/Region/China.list, tag=China, force-policy=direct, update-interval=172800, enabled=true
https://raw.githubusercontent.com/sve1r/Rules-For-Quantumult-X/refs/heads/main/Rules/Region/ChinaIP.list, tag=ChinaIP, force-policy=direct, update-interval=172800, enabled=true
https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt#type=rule, tag=ChinaIPv4, force-policy=direct, update-interval=172800, opt-parser=false, enabled=false
https://gaoyifan.github.io/china-operator-ip/china6.txt#type=rule, tag=ChinaIPv6, force-policy=direct, update-interval=172800, opt-parser=false, enabled=false

[rewrite_remote]
#
# 参数「tag」和「enabled」是可选的。
#

# BlockHTTPDNS
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/BlockHTTPDNS/BlockHTTPDNS.conf, tag=🛡BlockHTTPDNS, enabled=true

# Advertising 广告
# 毒奶去广告计划（与https://limbopro.com/Adblock4limbo.list分流共用）
https://limbopro.com/Adblock4limbo.conf, tag=🛡AdblockForLimbo, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Rewrite_lhie1.conf, tag=🛡NoByDa（lhie1 Rewrite）, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/QuantumultX/Js.conf, tag=🛡NoByDa（NoByDa Rewrite）, enabled=true

# 重定向
;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/Redirect/Redirect.conf

https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/QX.snippet, tag=Sub-store(高级订阅管理器), enabled=true

[server_local]
#
# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
#
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true
# [server_local] 完整示例请查看「示例」

[filter_local]
# Local Area Network 局域网
;host-suffix, local, direct
;geoip, cn, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 224.0.0.0/4, direct
ip6-cidr, fe80::/10, direct

final, 漏网之鱼

[rewrite_local]
# [rewrite_local] 完整示例请查看「示例」

[task_local]
#
# $task.fetch() 组成一个 HTTP 请求并处理响应，只支持 text body。如果您想要 serial requests 而不是 current requests，可以将 $task.fetch() 嵌入到另一个 $task.fetch() 的完成处理程序中。
#
# 脚本应保存在本地「我的 iPhone - Quantumult X - Scripts」或「iCloud Drive - Quantumult X - Scripts」中。示例：https://github.com/crossutility/Quantumult-X/blob/master/sample-task.js
#
# 默认的 HTTP 请求超时是 10 秒。
#
# 支持 5 或 6 个 cron 字段，不包括命令字段。
#

# > 流媒体解锁查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体解锁查询, img-url=arrowtriangle.right.square.system, enabled=true
；event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag=流媒体服务查询, img-url=checkmark.seal.system, enabled=true
# > GeoIP 查询
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/geo_location.js, tag=GeoIP 查询, img-url=location.fill.viewfinder.system, enabled=true

[http_backend]
#
# 部署一个本地 HTTP 服务器，并使用 JavaScript 进行数据处理。
# 输入变量为：$reqeust.url、$reqeust.path、$reqeust.headers、$reqeust.body。
# 使用 $done 输出像 $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") 这样的返回响应。
# 此外，您还可以使用签名或任何其他验证方法来验证请求是否合法。
# 部署后您应该通过 http://127.0.0.1:9999/your-path/your-api/. 进行访问。服务器默认监听端口为 9999，您可以在UI中进行更改。
#
# BoxJS改为使用http backend方式，访问地址改为http://127.0.0.1:9999，更新配置后请长按右下角功能键然后再按左下角的更新按钮，接着重启代理之后再开启backend开关
https://raw.githubusercontent.com/chavyleung/scripts/master/chavy.box.js, host=boxjs.com, tag=BoxJS, path=^/, enabled=true

[mitm]
#
# 只有「hostname」中的 TLS SNI 或目标地址将被 MitM 处理。
#
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。
#
# 偶尔有些用户喜欢调试 HTTPS 请求，其域名不存在，所以原证书根本不存在。当参数 simple_cert_hostname 出现的时候。其 TLS SNI 名称在 simple_cert_hostname(及 hostname) 中的 HTTPS 请求将使用纯本地生成的 MitM 证书。
#
# 注意！！！您应该始终保护您的 CA 密码和 p12 的私密性。
#
;passphrase =
;p12 =
skip_validating_cert = true
;force_sni_domain_name = false
;simple_cert_hostname = non-existed-domain.com, *.non-connected-domain.com
;hostname = *.googlevideo.com
